pipeline {
    agent any

    tools {
        // Specify the name used in the NodeJS plugin configuration
        nodejs 'nodejs'  // This should match the name you provided in the NodeJS plugin configuration
    }

    environment {
        EC2_USER = 'ubuntu'
        EC2_HOST = '18.223.209.120' // Use the actual EC2 host IP or domain
        APP_DIR = '/var/www/nodejs-jenkins-pipeline'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/kenneth-stack/nodejs-jenkins-pipeline.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    sh 'npm install'
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    sh 'npm test'
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'ec2-ssh-key', keyFileVariable: 'SSH_KEY', usernameVariable: 'SSH_USER')]) {
                        def keyFile = "${env.WORKSPACE}/ec2-key.pem"
                        writeFile file: keyFile, text: SSH_KEY
                        sh "chmod 600 ${keyFile}"

                        // Copy files to EC2
                        sh """
                        scp -i ${keyFile} -o StrictHostKeyChecking=no -r * ${SSH_USER}@${EC2_HOST}:${APP_DIR}
                        """

                        // Connect to EC2 and deploy the application
                        sh """
                        ssh -i ${keyFile} -o StrictHostKeyChecking=no ${SSH_USER}@${EC2_HOST} << EOF
                        cd ${APP_DIR}
                        npm install --production
                        pm2 stop all || true
                        pm2 start app.js --name "node-app"
                        EOF
                        """

                        // Clean up the SSH key
                        sh "rm -f ${keyFile}"
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
