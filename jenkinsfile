pipeline {
    agent any

    tools {
        nodejs 'nodejs'
    }

    environment {
        EC2_USER = 'ubuntu'
        EC2_HOST = '18.117.165.2'
        APP_DIR = '/home/ubuntu/nodejs-jenkins-pipeline'
        APP_NAME = 'node-app'
        APP_PORT = '5000'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    try {
                        git branch: 'main', url: 'https://github.com/kenneth-stack/nodejs-jenkins-pipeline.git'
                    } catch (Exception e) {
                        echo "Error during Checkout stage: ${e.message}"
                        throw e
                    }
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    try {
                        sh 'npm ci'
                    } catch (Exception e) {
                        echo "Error during Install Dependencies stage: ${e.message}"
                        throw e
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    try {
                        sh 'npm test'
                    } catch (Exception e) {
                        echo "Error during Test stage: ${e.message}"
                        throw e
                    }
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                script {
                    try {
                        withCredentials([sshUserPrivateKey(credentialsId: 'ec2-ssh-key', keyFileVariable: 'SSH_KEY')]) {
                            // Write the SSH key to a temporary file
                            writeFile file: 'temp_ssh_key', text: readFile(SSH_KEY)
                            sh 'chmod 600 temp_ssh_key'
                            
                            // Copy files to EC2 using rsync with exclusions
                            sh """
                                rsync -avz -e "ssh -i temp_ssh_key -o StrictHostKeyChecking=no" \
                                    --exclude 'node_modules' --exclude '.git' ./ ${EC2_USER}@${EC2_HOST}:${APP_DIR}/
                            """
                            
                            // Connect to EC2 and deploy the application
                            sh """
                                ssh -i temp_ssh_key -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} '
                                    cd ${APP_DIR}
                                    npm ci --production
                                    pm2 describe ${APP_NAME} > /dev/null 2>&1 && pm2 reload ${APP_NAME} || pm2 start app.js --name "${APP_NAME}" -- --port ${APP_PORT}
                                    pm2 save
                                '
                            """
                            
                            // Remove the temporary SSH key file
                            sh 'rm -f temp_ssh_key'
                        }
                    } catch (Exception e) {
                        echo "Error during Deploy to EC2 stage: ${e.message}"
                        throw e
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
        always {
            echo 'Printing all environment variables:'
            sh 'printenv | sort'
        }
    }
}